A tic tac table game has the following functions 

* Designate which player is using which symbol/value
* Take user input
* if grid position is empty add value
* if not reject and ask them to add it again
* Check if row,column or diagonal axis is filled with one value then that value player wins
* else if not the game is either ongoing 
* if all the cells are full or winning columns,rows,diagonals are mixed it is a tie


CLASSES
_______

* Board class - returns valuues in grid and adds value to grid
* Userinterface - Gets the user to be able to interact via interface

what the game does
-------------------
So takes in user details the name and represents this as a symbol
decides user turns
the user input is taken (moves)
the user input (moves)is added to the grid
it assesses the move 
if no one has won or it is not tied the game is kept as ongoing


**do not mix UI functionality with core functionality**


- true or false determines if the game is ongoing or not 

ok a method that determines the game win and loss
a method that determines player turns

rewrite the tests for winner to test all situations 
move methods not used to be private methods

heredocs


Things to address

Flow of human_vs_RandomAI


build hypothesis foe every specific moment in time
using pry to see each part of test at time
check out flow of process and test


for the minimax the algorithm goes like this
__________
IT CHECKS WHO IS THE PLAYER
Gets the value then plays a random move to check if it is a winning combinations
the value with the highest score and least plays is returned as the best play